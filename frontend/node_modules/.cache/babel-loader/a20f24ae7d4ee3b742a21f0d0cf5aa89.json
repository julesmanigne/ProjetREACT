{"ast":null,"code":"import { usePreviousProps } from '@mui/utils';\nexport default function useBadge(parameters) {\n  const badgeContentProp = parameters.badgeContent,\n        _parameters$invisible = parameters.invisible,\n        invisibleProp = _parameters$invisible === void 0 ? false : _parameters$invisible,\n        _parameters$max = parameters.max,\n        maxProp = _parameters$max === void 0 ? 99 : _parameters$max,\n        _parameters$showZero = parameters.showZero,\n        showZero = _parameters$showZero === void 0 ? false : _parameters$showZero;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n\n  const _ref = invisible ? prevProps : parameters,\n        badgeContent = _ref.badgeContent,\n        _ref$max = _ref.max,\n        max = _ref$max === void 0 ? maxProp : _ref$max;\n\n  const displayValue = badgeContent && Number(badgeContent) > max ? \"\".concat(max, \"+\") : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}","map":null,"metadata":{},"sourceType":"module"}