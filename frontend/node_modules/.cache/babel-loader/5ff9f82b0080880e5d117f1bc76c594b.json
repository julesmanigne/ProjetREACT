{"ast":null,"code":"import _slicedToArray from \"E:\\\\ING4\\\\Webdynamique\\\\ProjetREACT\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\ING4\\\\Webdynamique\\\\ProjetREACT\\\\frontend\\\\src\\\\App.jsx\";\nimport React from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport { Typography, AppBar, CssBaseline, Grid, Toolbar } from '@mui/material';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport WidgetCard from './components/WidgetCard';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport WidgetAlarm from './components/WidgetAlarm';\nimport WidgetWeather from './components/WidgetWeather';\nimport Widget4 from './components/Widget4';\nimport Widget5 from './components/Widget5';\nimport Widget6 from './components/Widget6';\nimport IconButton from '@mui/material/IconButton';\nimport { useTheme } from '@mui/material/styles';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nconst ColorModeContext = React.createContext({\n  toggleColorMode: () => {}\n});\n\nconst App = () => {\n  const theme = useTheme();\n  const colorMode = React.useContext(ColorModeContext);\n  return React.createElement(Box, {\n    sx: {\n      display: 'flex',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      bgcolor: 'background.default',\n      color: 'text.primary',\n      borderRadius: 1,\n      p: 3\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, theme.palette.mode, \" mode\", React.createElement(IconButton, {\n    sx: {\n      ml: 1\n    },\n    onClick: colorMode.toggleColorMode,\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, theme.palette.mode === 'dark' ? React.createElement(Brightness7Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }) : React.createElement(Brightness4Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })));\n};\n\nexport function ToggleColorMode() {\n  const _React$useState = React.useState('light'),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        mode = _React$useState2[0],\n        setMode = _React$useState2[1];\n\n  const colorMode = React.useMemo(() => ({\n    toggleColorMode: () => {\n      setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n    }\n  }), []);\n  const theme = React.useMemo(() => createTheme({\n    palette: {\n      mode\n    }\n  }), [mode]);\n}\nexport default App;","map":{"version":3,"sources":["E:/ING4/Webdynamique/ProjetREACT/frontend/src/App.jsx"],"names":["React","ThemeProvider","createTheme","Typography","AppBar","CssBaseline","Grid","Toolbar","DashboardIcon","WidgetCard","Box","Container","WidgetAlarm","WidgetWeather","Widget4","Widget5","Widget6","IconButton","useTheme","Brightness4Icon","Brightness7Icon","ColorModeContext","createContext","toggleColorMode","App","theme","colorMode","useContext","display","width","alignItems","justifyContent","bgcolor","color","borderRadius","p","palette","mode","ml","ToggleColorMode","useState","setMode","useMemo","prevMode"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,sBAA3C;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,WAA7B,EAA0CC,IAA1C,EAAgDC,OAAhD,QAA8D,eAA9D;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AAGA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AAEA,MAAMC,gBAAgB,GAAGrB,KAAK,CAACsB,aAAN,CAAoB;AAAEC,EAAAA,eAAe,EAAE,MAAM,CAAE;AAA3B,CAApB,CAAzB;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAEd,QAAMC,KAAK,GAAGP,QAAQ,EAAtB;AACA,QAAMQ,SAAS,GAAG1B,KAAK,CAAC2B,UAAN,CAAiBN,gBAAjB,CAAlB;AACA,SACE,oBAAC,GAAD;AACE,IAAA,EAAE,EAAE;AACFO,MAAAA,OAAO,EAAE,MADP;AAEFC,MAAAA,KAAK,EAAE,MAFL;AAGFC,MAAAA,UAAU,EAAE,QAHV;AAIFC,MAAAA,cAAc,EAAE,QAJd;AAKFC,MAAAA,OAAO,EAAE,oBALP;AAMFC,MAAAA,KAAK,EAAE,cANL;AAOFC,MAAAA,YAAY,EAAE,CAPZ;AAQFC,MAAAA,CAAC,EAAE;AARD,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYGV,KAAK,CAACW,OAAN,CAAcC,IAZjB,WAaE,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAE;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAhB;AAA2B,IAAA,OAAO,EAAEZ,SAAS,CAACH,eAA9C;AAA+D,IAAA,KAAK,EAAC,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,KAAK,CAACW,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GAAgC,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhC,GAAsD,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADzD,CAbF,CADF;AAmBD,CAvBH;;AAyBE,OAAO,SAASE,eAAT,GAA2B;AAAA,0BACRvC,KAAK,CAACwC,QAAN,CAAe,OAAf,CADQ;AAAA;AAAA,QACzBH,IADyB;AAAA,QACnBI,OADmB;;AAEhC,QAAMf,SAAS,GAAG1B,KAAK,CAAC0C,OAAN,CAChB,OAAO;AACLnB,IAAAA,eAAe,EAAE,MAAM;AACrBkB,MAAAA,OAAO,CAAEE,QAAD,IAAeA,QAAQ,KAAK,OAAb,GAAuB,MAAvB,GAAgC,OAAhD,CAAP;AACD;AAHI,GAAP,CADgB,EAMhB,EANgB,CAAlB;AASA,QAAMlB,KAAK,GAAGzB,KAAK,CAAC0C,OAAN,CACZ,MACExC,WAAW,CAAC;AACVkC,IAAAA,OAAO,EAAE;AACPC,MAAAA;AADO;AADC,GAAD,CAFD,EAOZ,CAACA,IAAD,CAPY,CAAd;AAYH;AAED,eAAeb,GAAf","sourcesContent":["import React from 'react'\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport { Typography, AppBar, CssBaseline, Grid, Toolbar} from '@mui/material'\r\nimport DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport WidgetCard from './components/WidgetCard';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport WidgetAlarm from './components/WidgetAlarm';\r\nimport WidgetWeather from './components/WidgetWeather';\r\nimport Widget4 from './components/Widget4';\r\nimport Widget5 from './components/Widget5';\r\nimport Widget6 from './components/Widget6';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\r\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\r\n\r\nconst ColorModeContext = React.createContext({ toggleColorMode: () => {} });\r\n\r\n\r\nconst App = () => {\r\n\r\n    const theme = useTheme();\r\n    const colorMode = React.useContext(ColorModeContext);\r\n    return (\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          width: '100%',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          bgcolor: 'background.default',\r\n          color: 'text.primary',\r\n          borderRadius: 1,\r\n          p: 3,\r\n        }}\r\n      >\r\n        {theme.palette.mode} mode\r\n        <IconButton sx={{ ml: 1 }} onClick={colorMode.toggleColorMode} color=\"inherit\">\r\n          {theme.palette.mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\r\n        </IconButton>\r\n      </Box>\r\n    );\r\n  }\r\n  \r\n  export function ToggleColorMode() {\r\n    const [mode, setMode] = React.useState('light');\r\n    const colorMode = React.useMemo(\r\n      () => ({\r\n        toggleColorMode: () => {\r\n          setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\r\n        },\r\n      }),\r\n      [],\r\n    );\r\n  \r\n    const theme = React.useMemo(\r\n      () =>\r\n        createTheme({\r\n          palette: {\r\n            mode,\r\n          },\r\n        }),\r\n      [mode],\r\n    );\r\n\r\n\r\n  \r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}